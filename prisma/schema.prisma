// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Card {
  id           Int       @id @default(autoincrement())
  flagged      Boolean   @default(false)
  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
  term         String
  definition   String
  repetitions  Float     @default(0)
  interval     Float     @default(1)
  ease         Float     @default(2.5)
  lapses       Float     @default(0)
  nextReviewAt Float     @default(0)
  createdAt    DateTime  @default(now())
  firstReview  DateTime?
  lastReview   DateTime?

  @@unique([userId, term])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  lastSeen      DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  cards         Card[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
